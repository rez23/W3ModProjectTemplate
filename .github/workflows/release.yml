name: Build and Release

on:
  push:
    tags:
      - 'v*.*'
    
jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download w3string encoder
      shell: pwsh
      run: |
        Invoke-WebRequest -Uri '${{ secrets.ENCODER_URI }}' -OutFile '${{ github.workspace }}\w3strings.exe'

    - name: Run build script
      shell: pwsh
      run: |
        New-Alias -Name w3strings -Value ${{ github.workspace }}\w3strings
        .\build.ps1 -idFixedPart 3411

    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: ./build/*.zip

  release:
    needs: build
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download build artifact
      uses: actions/download-artifact@v3

    - name: Show files
      run: |
        Get-ChildItem -Path ./build

    - name: Create GitHub Release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./build/${{ github.event.repository.name }}.zip
        asset_name: ${{ github.event.repository.name }}.zip
        asset_content_type: application/zip